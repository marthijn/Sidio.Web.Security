name: build

on:
  workflow_dispatch:
  push:
      branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  DOTNET_NOLOGO: true
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release
      - name: Test with dotnet
        run: dotnet test --configuration Release
      - name: SonarScanner for .NET 8 with pull request decoration support
        uses: highbyte/sonarscan-dotnet@v2.3.2
        with:
          # The key of the SonarQube project
          sonarProjectKey: marthijn_Sidio.Web.Security
          # The name of the SonarQube project
          sonarProjectName: Sidio.Web.Security
          # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
          sonarOrganization: marthijn
          # Optional command arguments to dotnet test
          dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          # Optional extra command arguments the the SonarScanner 'begin' command
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
